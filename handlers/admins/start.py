import sqlite3


from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import CommandStart

from data.config import admins
from keyboards.default.to_menu import to_menu
from loader import dp, db, bot
from states.reg import Registration


@dp.message_handler(CommandStart(), user_id = admins)
async def bot_start(message: types.Message, state: FSMContext):
    name = message.from_user.full_name
    user = db.select_user(id=message.from_user.id)

    await bot.send_sticker(message.from_user.id, "CAACAgIAAxkBAAEH0ntj8zhu-BhYd9AmTDBUzODCDwthYAAC_CsAAomCmEs3tSBs_jhz8S4E")
    await message.answer(f"–î–æ–±—Ä–∏–π –¥–µ–Ω—å, –º–µ–Ω–µ –∑–≤–∞—Ç–∏ Shudy!\n–Ø –±–æ—Ç-–ø–æ–º—ñ—á–Ω–∏–∫ —Å—Ç—É–¥—ñ—ó —Ç–∞–Ω—Ü—é VDCüòä\n–¢—É—Ç –í–∏ –º–æ–∂–µ—Ç–µ –∑–∞–ª–∏—à–∞—Ç–∏ –≤—ñ–¥–≥—É–∫–∏ –ø—Ä–æ –¥–æ—Å–≤—ñ–¥ –∑–∞–Ω—è—Ç—å –≤ –Ω–∞—à—ñ–π —Å—Ç—É–¥—ñ—ó!\n–Ü–Ω–æ–¥—ñ —è —Ä–æ–±–∏—Ç–∏–º—É –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —Ç–∞ –ø—Ä–æ–≤–æ–¥–∏—Ç–∏–º—É –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—èüì¢\n–û–±—ñ—Ü—è—é –Ω–µ –¥–æ–∫—É—á–∞—Ç–∏üòâ")
    if user == None:
        try:
            db.add_user(id=message.from_user.id, nickname=message.from_user.username, Name= name)
        except sqlite3.IntegrityError as err:
            print(err)
        await message.answer("–î–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–π–æ–º–∏–º–æ—Å—åüôÇ\n–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–ø–∏—à—ñ—Ç—å –í–∞—à–µ —ñ–º'—è")
        await Registration.Q1.set()
    else:
        print(user)
        await message.answer("–Ø –≤–∞—Å –ø–∞–º'—è—Ç–∞—é, –í–∏ —î –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Ü—å–æ–≥–æ –±–æ—Ç—É. –í –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é –≤–∏ –∑–Ω–∞–π–¥–µ—Ç–µ –¥–æ–¥–∞—Ç–∫–æ–≤—É –∫–Ω–æ–ø–∫—É –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –±–æ—Ç–æ–º", reply_markup=to_menu)
        await state.finish()

@dp.message_handler(state=Registration.Q1, user_id = admins)
async def first_quest(message: types.Message, state: FSMContext):
    answer = message.text
    db.update_user_name(answer, message.from_user.id)
    await message.answer(
        "\n".join(["–ü—Ä–∏—î–º–Ω–æ –ø–æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—è!",
                   "–í–∏ —î –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç—É",
                   "–£ –≤–∞—Å –±—É–¥–µ –¥–æ–¥–∞—Ç–∫–æ–≤–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –±–æ—Ç–æ–º"]
                  ), reply_markup=to_menu
    )
    await state.finish()